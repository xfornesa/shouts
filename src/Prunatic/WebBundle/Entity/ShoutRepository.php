<?php
/**
 * Author: Xavier
 */

namespace Prunatic\WebBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Prunatic\WebBundle\Entity\Shout;

/**
 * ShoutRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ShoutRepository extends EntityRepository
{
    private function qbVisibleShouts()
    {
        $visibleStatus = array(Shout::STATUS_APPROVED);
        $qb = $this->createQueryBuilder('s');

        return $qb
            ->where(
                $qb->expr()->in('s.status', $visibleStatus)
            )
        ;
    }

    private function qbNewestVisibleShouts()
    {
        $qb = $this->qbVisibleShouts();

        return $qb
            ->orderBy('s.created', 'desc')
            ->addOrderBy('s.id', 'desc')
        ;
    }

    /**
     * Get shouts approved ordered by created desc
     * @return array
     */
    public function getNewestVisibleShouts()
    {
        // TODO add a limit
        return $this->qbNewestVisibleShouts()
            ->getQuery()
            ->getResult()
        ;
    }

    private function qbTopRatedVisibleShouts()
    {
        $qb = $this->qbVisibleShouts();

        return $qb
            ->orderBy('s.totalVotes', 'desc')
            ->addOrderBy('s.id', 'desc')
        ;
    }

    /**
     * Get shouts approved ordered by totalVotes desc and id desc
     *
     * @return array
     */
    public function getTopRatedVisibleShouts()
    {
        // TODO add a limit
        return $this->qbTopRatedVisibleShouts()
            ->getQuery()
            ->getResult()
        ;
    }
}
